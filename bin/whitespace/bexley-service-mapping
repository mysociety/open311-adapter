#!/usr/bin/env perl

BEGIN {
    use File::Basename qw(dirname);
    use File::Spec;
    my $d = dirname(File::Spec->rel2abs($0));
    require "$d/../../setenv.pl";
}

use Integrations::Whitespace;

if ($ARGV[0] eq '-h') {
    print "Usage: $0\n";
    print "This script generates the YAML for the service_mapping key of the configuration.\n";
    exit;
}

my $whitespace = Integrations::Whitespace->new(config_filename => 'bexley_whitespace');

my $services = $whitespace->GetServices;

# Find all services where the ServiceName starts with "Missed" or are called "Recycling Collection Service"
my @missed_services = grep { $_->{ServiceName} =~ /^Missed/ || $_->{ServiceName} eq 'Recycling Collection Service' } @$services;

my %output;

for my $service (@missed_services) {
    my $service_items = $whitespace->GetServiceItems($service->{ServiceID});

    for my $service_item (@$service_items) {
        push @{ $output{$service_item->{ServiceItemName}} }, {
            service_id => $service->{ServiceID},
            service_name => $service->{ServiceName},
            service_item_id => $service_item->{ServiceItemID},
            service_item_description => $service_item->{ServiceItemDescription},
        };
    }

}

print "Service item name,Service item description,Service item ID,Service,Service ID\n";
for my $service_item_name (sort keys %output) {
    my $service_items = $output{$service_item_name};

    for my $service_item (@$service_items) {
        print "\"$service_item_name\",\"$service_item->{service_item_description}\",$service_item->{service_item_id},\"$service_item->{service_name}\",$service_item->{service_id}\n";
    }
}
